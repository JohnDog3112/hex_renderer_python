class Color(object):
        def __init__(self,r: int,g: int,b: int,a: int) -> None: ...
        @property
        def r(self) -> int: ...
        @property
        def g(self) -> int: ...
        @property
        def b(self) -> int: ...
        @property
        def a(self) -> int: ...
        def with_r(self,r: int) -> Color: ...
        def with_g(self,g: int) -> Color: ...
        def with_b(self,b: int) -> Color: ...
        def with_a(self,a: int) -> Color: ...
        def __repr__(self,) -> str: ...
class Marker(object):
        def __init__(self,color: Color,radius: float) -> None: ...
        @property
        def color(self) -> Color: ...
        @property
        def radius(self) -> float: ...
        def with_color(self,color: Color) -> Marker: ...
        def with_radius(self,radius: float) -> Marker: ...
        def __repr__(self,) -> str: ...
class Point(object):
        class None_(Point):
                def __init__(self,) -> None: ...
        class Single(Point):
                def __init__(self,marker: Marker) -> None: ...
                @property
                def marker(self) -> Marker: ...
                def with_marker(self,marker: Marker) -> Point.Single: ...
        class Double(Point):
                def __init__(self,inner: Marker,outer: Marker) -> None: ...
                @property
                def inner(self) -> Marker: ...
                @property
                def outer(self) -> Marker: ...
                def with_inner(self,inner: Marker) -> Point.Double: ...
                def with_outer(self,outer: Marker) -> Point.Double: ...
        def __repr__(self,) -> str: ...
class EndPoint(object):
        class Point(EndPoint):
                def __init__(self,point: Point) -> None: ...
                @property
                def point(self) -> Point: ...
                def with_point(self,point: Point) -> EndPoint.Point: ...
        class Match(EndPoint):
                def __init__(self,radius: float) -> None: ...
                @property
                def radius(self) -> float: ...
                def with_radius(self,radius: float) -> EndPoint.Match: ...
        class BorderedMatch(EndPoint):
                def __init__(self,match_radius: float,border: Marker) -> None: ...
                @property
                def match_radius(self) -> float: ...
                @property
                def border(self) -> Marker: ...
                def with_match_radius(self,match_radius: float) -> EndPoint.BorderedMatch: ...
                def with_border(self,border: Marker) -> EndPoint.BorderedMatch: ...
        def __repr__(self,) -> str: ...

def test() -> tuple[str, str]: ...

class TestA(object): 
        class TestB(TestA): ...
        class TestI:
                class TestG(TestA.TestB): ...

class TestC(TestA.TestB): ...

class TestD(object):
        class TestE(TestA.TestB): ...